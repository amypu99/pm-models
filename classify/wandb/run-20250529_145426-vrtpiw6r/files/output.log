  0%|                                                                                                      | 0/885 [00:00<?, ?it/s]`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`.
/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/utils/checkpoint.py:295: FutureWarning: `torch.cpu.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cpu', args...)` instead.
  with torch.enable_grad(), device_autocast_ctx, torch.cpu.amp.autocast(**ctx.cpu_autocast_kwargs):  # type: ignore[attr-defined]
Traceback (most recent call last):
  File "sft.py", line 92, in <module>
    trainer.train()
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/trl/trainer/sft_trainer.py", line 434, in train
    output = super().train(*args, **kwargs)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/transformers/trainer.py", line 2123, in train
    return inner_training_loop(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/transformers/trainer.py", line 3612, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/accelerate/accelerator.py", line 2242, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/function.py", line 306, in apply
    return user_fn(self, *args)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/utils/checkpoint.py", line 313, in backward
    torch.autograd.backward(outputs_with_grad, args_with_grad)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 112.00 MiB. GPU 0 has a total capacity of 47.54 GiB of which 66.94 MiB is free. Process 1024195 has 20.08 GiB memory in use. Including non-PyTorch memory, this process has 27.38 GiB memory in use. Of the allocated memory 26.88 GiB is allocated by PyTorch, and 176.16 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Traceback (most recent call last):
  File "sft.py", line 92, in <module>
    trainer.train()
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/trl/trainer/sft_trainer.py", line 434, in train
    output = super().train(*args, **kwargs)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/transformers/trainer.py", line 2123, in train
    return inner_training_loop(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/transformers/trainer.py", line 2481, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/transformers/trainer.py", line 3612, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/accelerate/accelerator.py", line 2242, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/function.py", line 306, in apply
    return user_fn(self, *args)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/utils/checkpoint.py", line 313, in backward
    torch.autograd.backward(outputs_with_grad, args_with_grad)
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/home/amy_pu/tigerfish_env/lib/python3.8/site-packages/torch/autograd/graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 112.00 MiB. GPU 0 has a total capacity of 47.54 GiB of which 66.94 MiB is free. Process 1024195 has 20.08 GiB memory in use. Including non-PyTorch memory, this process has 27.38 GiB memory in use. Of the allocated memory 26.88 GiB is allocated by PyTorch, and 176.16 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
